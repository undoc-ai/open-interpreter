"""

A module dedicated to providing embedding functionalities using the DefaultEmbeddingFunction from chromadb.utils.

This module initializes an embedding function that can be used to generate vector representations of queries. It sets an environment variable to ensure compatibility with tokenizers' parallelism and suppresses related warning messages. The module provides a singular function, `embed_function`, which leverages the initialized embedding function to convert a query into its embedded vector form.

Attributes:
    chroma_embedding_function (DefaultEmbeddingFunction): An instance of the embedding function, ready to convert queries into their vector representations.

Functions:
    embed_function(query):
        Converts a given query into its vector representation.

        Args:
            query (str): The text query to be embedded.

        Returns:
            list: The embedded representation of the query, as a flattened list.

Note: Documentation automatically generated by https://undoc.ai
"""

import os

import numpy as np
from chromadb.utils.embedding_functions import DefaultEmbeddingFunction as setup_embed

# Set up the embedding function
os.environ[
    "TOKENIZERS_PARALLELISM"
] = "false"  # Otherwise setup_embed displays a warning message
try:
    chroma_embedding_function = setup_embed()
except:
    # This does set up a model that we don't strictly need.
    # If it fails, it's not worth breaking everything.
    pass


def embed_function(query):
    """
    Def Embeds a given query into a chroma feature space using a predefined embedding function.
        Args:
            query: The input for which the embedding is to be computed. This is typically
                   a raw audio signal representation or related data.
        Returns:
            A list representing the embedded query in the chroma feature space.
            The embedding is squeezed to remove any single-dimensional entries from
            the shape of the array obtained from the embedding function, and then
            converted to a list.
    """
    return np.squeeze(chroma_embedding_function([query])).tolist()
