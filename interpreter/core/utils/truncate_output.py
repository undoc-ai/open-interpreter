"""


    Truncates a given string 'data' to a maximum number of characters specified by 'max_output_chars'.

    This function checks if the provided data exceeds the maximum allowed output length. If it does, the output is truncated to include only the last 'max_output_chars' characters. If the output was previously truncated, it removes any existing truncation message before applying a new one.

    Args:
        data (str): The string that needs to be truncated, if necessary.
        max_output_chars (int, optional): The maximum number of characters that the output should contain. Defaults to 2000.

    Returns:
        str: The truncated string with a message prepended indicating that the output has been truncated, if truncation was necessary.

    

Note: Documentation automatically generated by https://undoc.ai
"""
def truncate_output(data, max_output_chars=2000):
    """
        Truncates the given output data to a specified maximum character length.
        This function checks if the provided data exceeds a limit defined by
        'max_output_chars'. If it exceeds this limit, the data is truncated from the
        beginning, and only the last 'max_output_chars' characters are retained. A
        truncation message is prepended to the truncated data. If truncation has
        already occurred previously, identified by the presence of the truncation
        message at the start of 'data', the function will remove the previous message
        before applying a new truncation, to prevent message duplication.
        Args:
            data (str): The output data that is to be potentially truncated.
            max_output_chars (int, optional): The maximum number of characters that the
                output data is allowed to hold after truncation. Defaults to 2000.
        Returns:
            str: The truncated output data with a truncation message prepending it if
                truncation was necessary; otherwise, the original data.
    """
    needs_truncation = False

    message = f"Output truncated. Showing the last {max_output_chars} characters.\n\n"

    # Remove previous truncation message if it exists
    if data.startswith(message):
        data = data[len(message) :]
        needs_truncation = True

    # If data exceeds max length, truncate it and add message
    if len(data) > max_output_chars or needs_truncation:
        data = message + data[-max_output_chars:]

    return data
