"""

Converts HTML code to a base64-encoded PNG image.

This module takes a given HTML code as input, renders it to a PNG
image using the `html2image` library, encodes the image to base64, and
then cleans up by removing the temporary image file. The resulting
base64 string can be used for embedding the image in places where
binary data can be represented as text, such as within JSON, XML or
HTML documents.

The `Html2Image` library is used to capture a screenshot of the HTML
content as an image, which is then controlled by the `screenshot` method
with a predefined image size. A unique temporary filename is generated
to store the image before encoding it to avoid collisions with existing
files.

Functions:
    html_to_base64(code: str) -> str
        Takes a string containing HTML code and returns a base64-encoded
        PNG image as a string.

Attributes:
    None

Modules and packages required:
    base64
    os
    random
    string
    html2image.Html2Image
    .terminal_interface.utils.local_storage_path.get_storage_path

Note: Documentation automatically generated by https://undoc.ai
"""
import base64
import os
import random
import string

from html2image import Html2Image

from ...terminal_interface.utils.local_storage_path import get_storage_path


def html_to_base64(code):
    """
        Converts HTML code to a base64-encoded PNG image.
        This function takes HTML code as input and uses the Html2Image library to convert the HTML
        to a PNG image. It then encodes the image in base64 format and deletes the temporary image file.
        The resulting base64 string, which represents the PNG image, is returned.
        Args:
            code (str): A string containing the HTML code to be converted to an image.
        Returns:
            str: The base64-encoded representation of the converted PNG image.
        Raises:
            IOError: If the temporary file cannot be read or written to.
            OSError: If the temporary image file cannot be removed.
    """
    # Convert the HTML into an image using html2image
    hti = Html2Image()

    # Generate a random filename for the temporary image
    temp_filename = "".join(random.choices(string.digits, k=10)) + ".png"
    hti.output_path = get_storage_path()
    hti.screenshot(
        html_str=code,
        save_as=temp_filename,
        size=(960, 540),
    )

    # Get the full path of the temporary image file
    file_location = os.path.join(get_storage_path(), temp_filename)

    # Convert the image to base64
    with open(file_location, "rb") as image_file:
        screenshot_base64 = base64.b64encode(image_file.read()).decode()

    # Delete the temporary image file
    os.remove(file_location)

    return screenshot_base64
