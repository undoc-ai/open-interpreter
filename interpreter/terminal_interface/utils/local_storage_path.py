"""

Module `local_storage_path` provides utilities to determine and access user-specific storage paths 
    for application data using the appdirs library. It generates file paths to store application configuration and other data.

    Functions:
        get_storage_path(subdirectory=None):
            Gets the full path to a storage directory for application configs. If a subdirectory is specified,
            the subdirectory path will be included in the returned path.

            Args:
                subdirectory (str, optional): The name of a subdirectory within the user configuration directory.

            Returns:
                str: A string representing the absolute path to the user-specific config directory or its subdirectory.

    Attributes:
        config_dir (str): The user-specific path for storing application configuration files, determined using appdirs.

Note: Documentation automatically generated by https://undoc.ai
"""
import os

import appdirs

# Using appdirs to determine user-specific config path
config_dir = appdirs.user_config_dir("Open Interpreter")


def get_storage_path(subdirectory=None):
    """
        Retrieves the storage path based on a given subdirectory.
        This function returns the path to the configuration directory specified by 'config_dir'. If a subdirectory is provided,
        it will return the path to the specified subdirectory within the 'config_dir'.
        Args:
            subdirectory (str, optional): The subdirectory name within the configuration directory to retrieve the path for.
                If not specified or None, it returns the path to the configuration directory itself. Default is None.
        Returns:
            str: The path to the configuration directory or the path to the specified subdirectory within the configuration directory.
        Raises:
            TypeError: If 'subdirectory' is not a string or None.
    """
    if subdirectory is None:
        return config_dir
    else:
        return os.path.join(config_dir, subdirectory)
