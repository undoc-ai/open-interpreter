"""

Checks for the latest version of the 'open-interpreter' package on PyPI and compares it with the currently installed version.

This function fetches the latest version information from the Python Package Index (PyPI) for the 'open-interpreter' package by sending a GET request to the corresponding PyPI JSON API. It then parses the JSON response to retrieve the 'version' field, which contains the latest published version string. The function also retrieves the version of the 'open-interpreter' package currently installed in the environment using pkg_resources.get_distribution(). Both the latest and the current version strings are converted to packaging.version.Version objects in order to compare their precedence according to PEP 440.

Returns:
    bool: True if the latest version on PyPI is greater than the currently installed version, False otherwise.

Note: Documentation automatically generated by https://undoc.ai
"""
import pkg_resources
import requests
from packaging import version


def check_for_update():
    """
    Checks whether a newer version of the 'open-interpreter' package is available on PyPI.
    This function queries the PyPI repository for the 'open-interpreter' package to fetch the
    latest available version. It then compares this version with the currently installed version
    of the package, using the pkg_resources library to determine if an update is available.
    Returns:
        bool: True if the latest version on PyPI is greater than the currently installed version,
            False otherwise.
    """
    # Fetch the latest version from the PyPI API
    response = requests.get(f"https://pypi.org/pypi/open-interpreter/json")
    latest_version = response.json()["info"]["version"]

    # Get the current version using pkg_resources
    current_version = pkg_resources.get_distribution("open-interpreter").version

    return version.parse(latest_version) > version.parse(current_version)
